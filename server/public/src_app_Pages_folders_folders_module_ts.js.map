{"version":3,"file":"src_app_Pages_folders_folders_module_ts.js","mappings":"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","sources":["./src/app/Pages/folders/folders-routing.module.ts","./src/app/Pages/folders/folders.module.ts","./src/app/Pages/folders/folders.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FoldersPage } from './folders.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FoldersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FoldersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FoldersPageRoutingModule } from './folders-routing.module';\n\nimport { FoldersPage } from './folders.page';\nimport { CategoryPage } from '../Modals/category/category.page';\nimport { CategoryPageModule } from '../Modals/category/category.module';\nimport { PipesModule } from 'src/app/Pipes/pipes.module';\n\n@NgModule({\n  entryComponents: [\n    CategoryPage\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FoldersPageRoutingModule,\n    CategoryPageModule,\n    PipesModule\n  ],\n  declarations: [FoldersPage]\n})\nexport class FoldersPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CategoryPage } from '../Modals/category/category.page';\nimport { ToastService } from 'src/app/Services/Utilities/Toast.service';\nimport { ApiService } from 'src/app/Services/Api/Api.service';\n\n@Component({\n  selector: 'app-folders',\n  templateUrl: './folders.page.html',\n  styleUrls: ['./folders.page.scss'],\n})\nexport class FoldersPage implements OnInit {\n\n  parentId: any = '';\n  children: any[] = [];\n  textFilter = '';\n  listPath = [];\n  constructor(\n    private modalCtrl: ModalController,\n    private activeRoute: ActivatedRoute,\n    private myToast: ToastService,\n    private apiService: ApiService,\n    private router: Router,\n    private alertCtrl: AlertController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n   this.parentId = this.activeRoute.snapshot.paramMap.get('parent');\n   if (this.parentId === 'trash') {\n    this.listChildren('trash');\n   } else {\n     this.apiService.getPathFolder(this.parentId).subscribe((path: any) => {\n        if (path.status === 'ok') {\n          this.listPath = path.response;\n        }\n     });\n     this.listChildren('');\n   }\n  }\n\n\n  async addChild(type) {\n      let title = '';\n      if (type === 'file') {\n        title = 'Subir Archivos';\n      } else if (type === 'folder') {\n        title = 'Crear Carpeta';\n      } else if (type === 'keys') {\n        title = '¿Quién tiene permisos para esta carpeta?';\n      }\n      const modal = await this.modalCtrl.create({\n        component: CategoryPage,\n        componentProps: {\n          type,\n          title,\n          parentId: this.parentId\n        }\n      });\n\n      await modal.present();\n\n      const response = await modal.onWillDismiss();\n\n      if (response) {\n        if (response.data.status) {\n          this.listChildren('');\n          this.myToast.newCreatedToast(response.data.message, true);\n        } else {\n            this.myToast.newCreatedToast('No se pudo realizar la acción', false);\n        }\n      }\n\n  }\n\n  listChildren(type: string) {\n      this.apiService.getFolders(this.parentId, type).subscribe((childs: any) => {\n          console.log(childs);\n          if (childs.status === 'ok') {\n            const files: any[] = childs.response.filter((item: any) => item.typeAction === 'file' );\n            const folders: any[] = childs.response.filter((item: any) => item.typeAction === 'folder' );\n\n            // console.log(files, folders);\n            this.children = files;\n            folders.forEach((item) => this.children.push(item));\n          } else {\n\n          }\n      }, () => {\n        this.myToast.newCreatedToast('No se pudo realizar la acción', false);\n      });\n  }\n\n  listData(id) {\n    return new Promise((resolve, reject) => {\n        this.apiService.getFolders(id, '').subscribe((res: any) => {\n          if (res.status === 'ok') {\n              resolve({\n                files: res.response.filter((item) => item.typeAction === 'file').length,\n                folder: res.response.filter((item) => item.typeAction === 'folder').length\n              })\n          } else {\n            reject({\n              error: res.err\n            })\n          }\n        })\n    })\n}\n\n\n \n\n  download( path: any, name) {\n    console.log(name);\n    window.open('http://localhost:3000/download?path=' + path + '&name=' + name , '_self');\n  }\n\n  filter( event ) {\n    this.textFilter = event.detail.value;\n  }\n\n  async alertDelete( id: any, type: string) {\n    \n\n      const data: any = await this.listData(id);\n\n      if (data) {\n        const alert = await this.alertCtrl.create({\n          header: 'Esta seguro de eliminar esta Carpeta?',\n          message: `Dentro de ella se encuentran ${data.files} archivos y  ${data.folder} carpetas.`,\n          buttons: [\n            {\n              text: 'Cancelar',\n              role: 'cancel'\n            },\n            {\n              text: 'Aceptar',\n              handler: () => {\n                this.deleteChildren(id, type);\n              }\n            }\n          ]\n        });\n  \n        return await alert.present();\n      }\n  \n  }\n\n  deleteChildren(id: any, type: string) {\n\n    const msg = type === 'file' ? 'Archivo eliminado del repositorio' : 'Carpeta eliminada del repositorio';\n    this.apiService.deletedFolder(id).subscribe((childs: any) => {\n        if (childs.status === 'ok') {\n          this.listChildren('');\n          this.myToast.newCreatedToast(msg, false);\n        } else {\n          this.myToast.newCreatedToast('No se pudo realizar la acción', false);\n        }\n    }, () => {\n      this.myToast.newCreatedToast('No se pudo realizar la acción', false);\n    });\n}\n\nrecoverChildren(id: any, type: string) {\n  const msg = type === 'file' ? 'Archivo recuperado' : 'Carpeta recuperada';\n  console.log(id)\n  this.apiService.recoverFolder(id).subscribe((childs: any) => {\n      if (childs.status === 'ok') {\n        this.listChildren('trash');\n        this.myToast.newCreatedToast(msg, false);\n      } else {\n        this.myToast.newCreatedToast('No se pudo realizar la acción', false);\n      }\n  }, () => {\n    this.myToast.newCreatedToast('No se pudo realizar la acción', false);\n  });\n}\n\ntrash() {\n  this.router.navigate(['repository/folders/trash']);\n}\n\n\nreturn() {\n  \n}\n\n\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}